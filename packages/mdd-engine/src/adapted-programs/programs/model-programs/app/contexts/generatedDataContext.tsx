import React, {
  useState,
  useEffect,
  createContext,
  PropsWithChildren,
  FunctionComponent,
  useContext,
} from 'react';
import { GeneratedIndex } from '../generatedDataTypes';

const generatedDataPromise = import('../generated') as Promise<{
  default: GeneratedIndex;
}>;

/**
 * React context for code that is generated by the model-programs
 * program. These files are dynamically imported since static imports would fail
 * on a fresh clone of the project.
 */
const GeneratedDataContext = createContext<GeneratedIndex>({
  programList: [],
});

export const GeneratedDataProvider: FunctionComponent<PropsWithChildren> = ({
  children,
}) => {
  const [generatedData, setGeneratedData] = useState<GeneratedIndex>({
    programList: [],
  });

  useEffect(() => {
    // eslint-disable-next-line @typescript-eslint/no-floating-promises
    generatedDataPromise.then(({ default: value }) => {
      setGeneratedData(value);
    });
  });

  return (
    <GeneratedDataContext.Provider value={generatedData}>
      {children}
    </GeneratedDataContext.Provider>
  );
};

export const useGeneratedData = (): GeneratedIndex => {
  return useContext(GeneratedDataContext);
};
